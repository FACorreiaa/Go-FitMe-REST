version: '3.9'
services:
  debug:
    build:
      dockerfile: Dockerfile
      context: .
      target: debug
    security_opt:
      - seccomp:unconfined
    cap_add:
      - SYS_PTRACE
    ports:
      - "40000:40000"
    command: "dlv exec --listen=127.0.0.1:40000 --headless=true --api-version=2 --accept-multiclient /stay-healthy-backend"
    networks:
      - stay_healthy_api
  app:
    build:
      dockerfile: Dockerfile
      context: .
      target: dev
    volumes:
      - .:/opt/app/api
    environment:
      AH_AHSERVER_PORT: ":8080"
    ports:
    - "7070:8080"
    security_opt:
      - seccomp:unconfined
    cap_add:
      - SYS_PTRACE
    networks:
      - stay_healthy_api
  postgres:
    env_file:
      - .env.compose
    hostname: postgres
    image: postgres:alpine
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5435:5432"
    restart: on-failure
    volumes:
      - ./.data/docker-postgres:/var/lib/postgresql/data
    networks:
      - stay_healthy_api
  redis:
    env_file:
      - .env.compose
    container_name: redis
    hostname: redis
    image: redis:latest
    command: redis-server --port 6380
    ports:
      - "6380:6380"
    expose:
      - "6380"
    #    environment:
    #      REDIS_HOST: ${REDIS_HOST}
    #      REDIS_PASSWORD: ${REDIS_PASSWORD}
    #      REDIS_DB: ${REDIS_DB}
    volumes:
      - ./.data/docker-redis:/var/lib/redis/data
    networks:
      - stay_healthy_api

networks:
  stay_healthy_api:
