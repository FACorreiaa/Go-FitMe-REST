basePath: /
definitions:
  activity.Activity:
    properties:
      calories_per_hour:
        type: number
      created_at:
        type: string
      duration_minutes:
        type: number
      id:
        example: "0"
        type: string
      name:
        type: string
      total_calories:
        type: number
      updated_at:
        type: string
      user_id:
        example: ""
        type: string
    type: object
  activity.ExerciseSession:
    properties:
      activity_id:
        type: integer
      calories_burned:
        type: integer
      created_at:
        type: string
      duration_hours:
        type: integer
      duration_minutes:
        type: integer
      duration_seconds:
        type: integer
      end_time:
        type: string
      id:
        example: ""
        type: string
      session_name:
        type: string
      start_time:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  auth.UserSession:
    properties:
      email:
        type: string
      id:
        type: integer
      username:
        type: string
    type: object
  calculator.UserMacroDistribution:
    properties:
      activity:
        type: string
      activity_description:
        type: string
      age:
        type: integer
      bmr:
        type: integer
      calories_distribution:
        type: string
      calories_distribution_description:
        type: string
      carbs:
        type: integer
      created_at:
        type: string
      fats:
        type: integer
      gender:
        type: string
      goal:
        type: integer
      height:
        type: integer
      id:
        example: ""
        type: string
      objective:
        type: string
      objective_description:
        type: string
      protein:
        type: integer
      system:
        type: string
      tdee:
        type: integer
      user_id:
        type: integer
      weight:
        type: integer
    type: object
  measurement.WaistLine:
    properties:
      created_at:
        type: string
      id:
        example: ""
        type: string
      quantity:
        type: number
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  measurement.WaterIntake:
    properties:
      created_at:
        type: string
      id:
        example: ""
        type: string
      quantity:
        type: number
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  measurement.Weight:
    properties:
      created_at:
        type: string
      id:
        example: ""
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
      weight_value:
        type: number
    type: object
  user.SuccessResponse:
    properties:
      success:
        type: boolean
    type: object
  user.signInRequestBody:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  user.signUpSuccessResponse:
    properties:
      id:
        type: integer
    type: object
  user.userRequestBody:
    properties:
      email:
        type: string
      password:
        maxLength: 48
        minLength: 6
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  workouts.Exercises:
    properties:
      created_at:
        type: string
      custom_created:
        type: boolean
      difficulty:
        type: string
      equipment:
        type: string
      id:
        example: ""
        type: string
      instructions:
        type: string
      muscle:
        type: string
      name:
        type: string
      type:
        type: string
      updated_at:
        type: string
      video:
        type: string
    type: object
  workouts.WorkoutPlan:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        example: ""
        type: string
      notes:
        type: string
      rating:
        type: integer
      updated_at:
        type: string
      user_id:
        type: integer
      workoutDays:
        items:
          $ref: '#/definitions/workouts.WorkoutPlanDay'
        type: array
    type: object
  workouts.WorkoutPlanDay:
    properties:
      day:
        type: string
      exercises:
        items:
          $ref: '#/definitions/workouts.Exercises'
        type: array
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Alpha server built with Go and Chi
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: StayHealthy Swagger Documentation
  version: "2.0"
paths:
  /:
    get:
      consumes:
      - '*/*'
      description: get the status of server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Show the status of server.
      tags:
      - root
  /{user_id}:
    get:
      consumes:
      - application/json
      description: Get all diet macros from user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/calculator.UserMacroDistribution'
            type: array
      summary: Get all diet macros from user
      tags:
      - macros calculator
    post:
      consumes:
      - application/json
      description: Create all diet macros from user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/calculator.UserMacroDistribution'
            type: array
      summary: Create all diet macros from user
      tags:
      - macros calculator
  /activities:
    get:
      consumes:
      - application/json
      description: get activities
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/activity.Activity'
            type: array
      summary: Show all activities
      tags:
      - activities
  /activities/id/{id}:
    get:
      consumes:
      - application/json
      description: Get activity by id
      parameters:
      - description: Activity ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/activity.Activity'
            type: array
      summary: Show all activity by id
      tags:
      - activities
  /activities/name/{name}:
    get:
      consumes:
      - application/json
      description: Get activities by name
      parameters:
      - description: Activity Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/activity.Activity'
            type: array
      summary: Show all activities by name
      tags:
      - activities
  /activities/start/session/id/{id}:
    post:
      consumes:
      - application/json
      description: Stop Activity
      parameters:
      - description: Activity ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/activity.ExerciseSession'
            type: array
      summary: Stop activity timer
      tags:
      - activities
  /activities/user/exercises/user/{user_id}:
    post:
      consumes:
      - application/json
      description: Get exercise session
      parameters:
      - description: Activity ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/activity.ExerciseSession'
            type: array
      summary: Get user exercise session
      tags:
      - activities
  /activities/user/session/total/stats/{user_id}:
    post:
      consumes:
      - application/json
      description: Get user exercise total data for durations and calories
      parameters:
      - description: Activity ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/activity.ExerciseSession'
            type: array
      summary: Get user exercise data
      tags:
      - activities
  /activities/user/session/total/user/{user_id}:
    post:
      consumes:
      - application/json
      description: Get user exercise total data for durations and calories
      parameters:
      - description: Activity ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/activity.ExerciseSession'
            type: array
      summary: Get user exercise data
      tags:
      - activities
  /exercises:
    get:
      consumes:
      - application/json
      description: Get all exercises
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/workouts.Exercises'
            type: array
      summary: GetExercises
      tags:
      - workouts exercises
  /exercises/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an exercise on the list
      parameters:
      - description: Exercise ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/workouts.Exercises'
            type: array
      summary: Delete exercise
      tags:
      - workouts exercises
    get:
      consumes:
      - application/json
      description: Get exercise by its id
      parameters:
      - description: Exercise ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/workouts.Exercises'
            type: array
      summary: GetExerciseByID
      tags:
      - workouts exercises
    patch:
      consumes:
      - application/json
      description: Update an exercise on the list
      parameters:
      - description: Exercise ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/workouts.Exercises'
            type: array
      summary: Update exercise
      tags:
      - workouts exercises
    post:
      consumes:
      - application/json
      description: Insert a new exercise on the list
      parameters:
      - description: Exercise ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/workouts.Exercises'
            type: array
      summary: Insert exercise
      tags:
      - workouts exercises
  /exercises/workout/plan:
    get:
      consumes:
      - application/json
      description: Retrieve all workout plans
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/workouts.WorkoutPlan'
            type: array
      summary: Get workout plan
      tags:
      - workouts
    post:
      consumes:
      - application/json
      description: Create a new workout plan
      produces:
      - application/json
      responses: {}
      summary: Create workout plan
      tags:
      - workouts
  /exercises/workout/plan/{id}:
    delete:
      consumes:
      - application/json
      description: Delete workout plan by id
      parameters:
      - description: Workout plan ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/workouts.WorkoutPlan'
            type: array
      summary: Delete workout plan
      tags:
      - workouts
    get:
      consumes:
      - application/json
      description: Retrieve workout plan by id
      parameters:
      - description: Workout plan ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/workouts.WorkoutPlan'
            type: array
      summary: Get workout plan
      tags:
      - workouts
    patch:
      consumes:
      - application/json
      description: Update workout plan by id
      parameters:
      - description: Workout plan ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/workouts.WorkoutPlan'
            type: array
      summary: Update workout plan
      tags:
      - workouts
  /exercises/workout/plan/{workoutPlanID}/day/{workoutDay}/exercise/{exerciseID}:
    delete:
      consumes:
      - application/json
      description: Delete exercises by id from workout plan
      parameters:
      - description: workout_plan_id
        in: path
        name: workoutPlanID
        required: true
        type: integer
      - description: Day
        in: path
        name: workoutDay
        required: true
        type: string
      - description: exercise_id
        in: path
        name: exerciseID
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: Delete exercises by id from workout plan
      tags:
      - workouts
    post:
      consumes:
      - application/json
      description: Insert new exercise into workout plan
      parameters:
      - description: workout_plan_id
        in: path
        name: workoutPlanID
        required: true
        type: integer
      - description: Day
        in: path
        name: workoutDay
        required: true
        type: string
      - description: exercise_id
        in: path
        name: exerciseID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/workouts.WorkoutPlan'
            type: array
      summary: Insert new exercise into workout plan
      tags:
      - workouts
  /exercises/workout/plan/{workoutPlanID}/day/{workoutDay}/exercise/{prevExerciseID}/{exerciseID}:
    patch:
      consumes:
      - application/json
      description: Update exercise into workout plan
      parameters:
      - description: Workout plan ID
        in: path
        name: workoutPlanID
        required: true
        type: integer
      - description: Day
        in: path
        name: workoutDay
        required: true
        type: string
      - description: Exercise ID
        in: path
        name: exerciseID
        required: true
        type: integer
      - description: Exercise ID
        in: path
        name: prevExerciseID
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: Update exercise into workout plan
      tags:
      - workouts
  /exercises/workout/plan/exercise:
    get:
      consumes:
      - application/json
      description: Get exercises from workout plan
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/workouts.WorkoutPlan'
            type: array
      summary: Get exercises from workout plan
      tags:
      - workouts
  /exercises/workout/plan/exercise/{id}:
    get:
      consumes:
      - application/json
      description: Get exercises by id from workout plan
      parameters:
      - description: Workout plan ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/workouts.WorkoutPlan'
            type: array
      summary: Get exercises by id from workout plan
      tags:
      - workouts
  /plan/{id}:
    get:
      consumes:
      - application/json
      description: Get diet macros
      parameters:
      - description: uuid formatted ID.
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/calculator.UserMacroDistribution'
            type: array
      summary: Get diet macros
      tags:
      - macros calculator
  /users/me:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.UserSession'
      security:
      - ApiKeyAuth: []
      summary: Get the user's info
      tags:
      - users
  /users/sign-in:
    post:
      consumes:
      - application/json
      parameters:
      - description: The user's email and password
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.signInRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: contains the session id in bearer format
              type: string
          schema:
            $ref: '#/definitions/user.SuccessResponse'
      summary: Sign in a user
      tags:
      - users
  /users/sign-out:
    get:
      consumes:
      - application/json
      description: Delete current user session
      parameters:
      - description: sessionId string
        in: path
        name: sessionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/auth.UserSession'
            type: array
      summary: Delete user session
      tags:
      - session
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.SuccessResponse'
      summary: Sign out a user
      tags:
      - users
  /users/sign-up:
    post:
      consumes:
      - application/json
      parameters:
      - description: The user's first name, last name, email, and password
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.userRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: contains the session id in bearer format
              type: string
          schema:
            $ref: '#/definitions/user.signUpSuccessResponse'
      summary: Sign up a user
      tags:
      - users
  /users/user/info:
    get:
      consumes:
      - application/json
      description: Get info about user session
      parameters:
      - description: session string
        in: path
        name: session
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/auth.UserSession'
            type: array
      summary: Get user session
      tags:
      - session
  /waistline:
    get:
      consumes:
      - application/json
      description: Get user waist line list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/measurement.WaistLine'
      summary: Get user waist line list
      tags:
      - measurements waistline
    post:
      consumes:
      - application/json
      description: Get user waist line
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/measurement.WaistLine'
      summary: Get user waist line
      tags:
      - measurements waistline
  /waistline/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user waist line
      parameters:
      - description: WaistLine
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/measurement.WaistLine'
      summary: Delete user waist line
      tags:
      - measurements waistline
    get:
      consumes:
      - application/json
      description: Get user waist line
      parameters:
      - description: WaistLine
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/measurement.WaistLine'
      summary: Get user waist line
      tags:
      - measurements waistline
    patch:
      consumes:
      - application/json
      description: Update user waist line
      parameters:
      - description: WaistLine
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/measurement.WaistLine'
      summary: Update user waist line
      tags:
      - measurements waistline
  /water:
    get:
      consumes:
      - application/json
      description: Get user water intake list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/measurement.WaterIntake'
      summary: Get user water intake list
      tags:
      - measurements water
    post:
      consumes:
      - application/json
      description: Insert user water intake
      parameters:
      - description: Water
        in: path
        name: w
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/measurement.WaterIntake'
      summary: Insert user water intake
      tags:
      - measurements water
  /water/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user water intake
      parameters:
      - description: Water
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/measurement.WaterIntake'
      summary: Delete user water intake
      tags:
      - measurements water
    get:
      consumes:
      - application/json
      description: Get user water intake
      parameters:
      - description: Water
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/measurement.WaterIntake'
      summary: Get user water intake
      tags:
      - measurements water
    patch:
      consumes:
      - application/json
      description: Update user water intake
      parameters:
      - description: Water
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/measurement.WaterIntake'
      summary: Update user water intake
      tags:
      - measurements water
  /weight:
    post:
      consumes:
      - application/json
      description: Insert user weight
      parameters:
      - description: Weight
        in: path
        name: w
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/measurement.Weight'
      summary: Insert user weight
      tags:
      - measurements weight
  /weight/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user weight
      parameters:
      - description: Weight ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/measurement.Weight'
            type: array
      summary: Delete user weight
      tags:
      - measurements weight
    get:
      consumes:
      - application/json
      description: Get user weight
      parameters:
      - description: Weight
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/measurement.Weight'
            type: array
      summary: Get user weight
      tags:
      - measurements weight
    patch:
      consumes:
      - application/json
      description: Update user weight
      parameters:
      - description: Weight ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/measurement.Weight'
            type: array
      summary: Update user weight
      tags:
      - measurements weight
  /weights:
    get:
      consumes:
      - application/json
      description: Get all user weight list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/measurement.Weight'
            type: array
      summary: Get all user weight list
      tags:
      - measurements weight
schemes:
- http
swagger: "2.0"
